// Autogenerated by Thrift Compiler (0.9.1)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package ip2city

import (
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
	"math"
)

// (needed to ensure safety because of naive import list construction.)
var _ = math.MinInt32
var _ = thrift.ZERO
var _ = fmt.Printf

var GoUnusedProtection__ int

type IpModel struct {
	Sip        string `thrift:"sip,1"`
	Eip        string `thrift:"eip,2"`
	Name       string `thrift:"name,3"`
	ProvId     int32  `thrift:"prov_id,4"`
	ProvName   string `thrift:"prov_name,5"`
	CityId     int32  `thrift:"city_id,6"`
	CityName   string `thrift:"city_name,7"`
	CityPinyin string `thrift:"city_pinyin,8"`
	DistId     int32  `thrift:"dist_id,9"`
	DistName   string `thrift:"dist_name,10"`
}

func NewIpModel() *IpModel {
	return &IpModel{}
}

func (p *IpModel) Read(iprot thrift.TProtocol) error {
	if _, err := iprot.ReadStructBegin(); err != nil {
		return fmt.Errorf("%T read error", p)
	}
	for {
		_, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
		if err != nil {
			return fmt.Errorf("%T field %d read error: %s", p, fieldId, err)
		}
		if fieldTypeId == thrift.STOP {
			break
		}
		switch fieldId {
		case 1:
			if err := p.readField1(iprot); err != nil {
				return err
			}
		case 2:
			if err := p.readField2(iprot); err != nil {
				return err
			}
		case 3:
			if err := p.readField3(iprot); err != nil {
				return err
			}
		case 4:
			if err := p.readField4(iprot); err != nil {
				return err
			}
		case 5:
			if err := p.readField5(iprot); err != nil {
				return err
			}
		case 6:
			if err := p.readField6(iprot); err != nil {
				return err
			}
		case 7:
			if err := p.readField7(iprot); err != nil {
				return err
			}
		case 8:
			if err := p.readField8(iprot); err != nil {
				return err
			}
		case 9:
			if err := p.readField9(iprot); err != nil {
				return err
			}
		case 10:
			if err := p.readField10(iprot); err != nil {
				return err
			}
		default:
			if err := iprot.Skip(fieldTypeId); err != nil {
				return err
			}
		}
		if err := iprot.ReadFieldEnd(); err != nil {
			return err
		}
	}
	if err := iprot.ReadStructEnd(); err != nil {
		return fmt.Errorf("%T read struct end error: %s", p, err)
	}
	return nil
}

func (p *IpModel) readField1(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 1: %s")
	} else {
		p.Sip = v
	}
	return nil
}

func (p *IpModel) readField2(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 2: %s")
	} else {
		p.Eip = v
	}
	return nil
}

func (p *IpModel) readField3(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 3: %s")
	} else {
		p.Name = v
	}
	return nil
}

func (p *IpModel) readField4(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 4: %s")
	} else {
		p.ProvId = v
	}
	return nil
}

func (p *IpModel) readField5(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 5: %s")
	} else {
		p.ProvName = v
	}
	return nil
}

func (p *IpModel) readField6(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 6: %s")
	} else {
		p.CityId = v
	}
	return nil
}

func (p *IpModel) readField7(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 7: %s")
	} else {
		p.CityName = v
	}
	return nil
}

func (p *IpModel) readField8(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 8: %s")
	} else {
		p.CityPinyin = v
	}
	return nil
}

func (p *IpModel) readField9(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadI32(); err != nil {
		return fmt.Errorf("error reading field 9: %s")
	} else {
		p.DistId = v
	}
	return nil
}

func (p *IpModel) readField10(iprot thrift.TProtocol) error {
	if v, err := iprot.ReadString(); err != nil {
		return fmt.Errorf("error reading field 10: %s")
	} else {
		p.DistName = v
	}
	return nil
}

func (p *IpModel) Write(oprot thrift.TProtocol) error {
	if err := oprot.WriteStructBegin("IpModel"); err != nil {
		return fmt.Errorf("%T write struct begin error: %s", p, err)
	}
	if err := p.writeField1(oprot); err != nil {
		return err
	}
	if err := p.writeField2(oprot); err != nil {
		return err
	}
	if err := p.writeField3(oprot); err != nil {
		return err
	}
	if err := p.writeField4(oprot); err != nil {
		return err
	}
	if err := p.writeField5(oprot); err != nil {
		return err
	}
	if err := p.writeField6(oprot); err != nil {
		return err
	}
	if err := p.writeField7(oprot); err != nil {
		return err
	}
	if err := p.writeField8(oprot); err != nil {
		return err
	}
	if err := p.writeField9(oprot); err != nil {
		return err
	}
	if err := p.writeField10(oprot); err != nil {
		return err
	}
	if err := oprot.WriteFieldStop(); err != nil {
		return fmt.Errorf("%T write field stop error: %s", err)
	}
	if err := oprot.WriteStructEnd(); err != nil {
		return fmt.Errorf("%T write struct stop error: %s", err)
	}
	return nil
}

func (p *IpModel) writeField1(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("sip", thrift.STRING, 1); err != nil {
		return fmt.Errorf("%T write field begin error 1:sip: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Sip)); err != nil {
		return fmt.Errorf("%T.sip (1) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 1:sip: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField2(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("eip", thrift.STRING, 2); err != nil {
		return fmt.Errorf("%T write field begin error 2:eip: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Eip)); err != nil {
		return fmt.Errorf("%T.eip (2) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 2:eip: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField3(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("name", thrift.STRING, 3); err != nil {
		return fmt.Errorf("%T write field begin error 3:name: %s", p, err)
	}
	if err := oprot.WriteString(string(p.Name)); err != nil {
		return fmt.Errorf("%T.name (3) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 3:name: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField4(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("prov_id", thrift.I32, 4); err != nil {
		return fmt.Errorf("%T write field begin error 4:prov_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.ProvId)); err != nil {
		return fmt.Errorf("%T.prov_id (4) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 4:prov_id: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField5(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("prov_name", thrift.STRING, 5); err != nil {
		return fmt.Errorf("%T write field begin error 5:prov_name: %s", p, err)
	}
	if err := oprot.WriteString(string(p.ProvName)); err != nil {
		return fmt.Errorf("%T.prov_name (5) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 5:prov_name: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField6(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("city_id", thrift.I32, 6); err != nil {
		return fmt.Errorf("%T write field begin error 6:city_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.CityId)); err != nil {
		return fmt.Errorf("%T.city_id (6) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 6:city_id: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField7(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("city_name", thrift.STRING, 7); err != nil {
		return fmt.Errorf("%T write field begin error 7:city_name: %s", p, err)
	}
	if err := oprot.WriteString(string(p.CityName)); err != nil {
		return fmt.Errorf("%T.city_name (7) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 7:city_name: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField8(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("city_pinyin", thrift.STRING, 8); err != nil {
		return fmt.Errorf("%T write field begin error 8:city_pinyin: %s", p, err)
	}
	if err := oprot.WriteString(string(p.CityPinyin)); err != nil {
		return fmt.Errorf("%T.city_pinyin (8) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 8:city_pinyin: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField9(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("dist_id", thrift.I32, 9); err != nil {
		return fmt.Errorf("%T write field begin error 9:dist_id: %s", p, err)
	}
	if err := oprot.WriteI32(int32(p.DistId)); err != nil {
		return fmt.Errorf("%T.dist_id (9) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 9:dist_id: %s", p, err)
	}
	return err
}

func (p *IpModel) writeField10(oprot thrift.TProtocol) (err error) {
	if err := oprot.WriteFieldBegin("dist_name", thrift.STRING, 10); err != nil {
		return fmt.Errorf("%T write field begin error 10:dist_name: %s", p, err)
	}
	if err := oprot.WriteString(string(p.DistName)); err != nil {
		return fmt.Errorf("%T.dist_name (10) field write error: %s", p)
	}
	if err := oprot.WriteFieldEnd(); err != nil {
		return fmt.Errorf("%T write field end error 10:dist_name: %s", p, err)
	}
	return err
}

func (p *IpModel) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("IpModel(%+v)", *p)
}
